name: Build and Release

on:
  push:
    branches: [ main, dev ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main, dev ]

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            name: Linux
            cli_output: ravro_dcrpt-linux-amd64
            gui_output: ravro_dcrpt_gui-linux-amd64
          - os: windows-latest
            name: Windows
            cli_output: ravro_dcrpt-windows-amd64.exe
            gui_output: ravro_dcrpt_gui-windows-amd64.exe
          - os: macos-latest
            name: macOS
            cli_output: ravro_dcrpt-darwin-arm64
            gui_output: ravro_dcrpt_gui-darwin-arm64

    runs-on: ${{ matrix.os }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'
          cache: true

      - name: Verify Go environment
        run: |
          go version
          go env GOMOD
          go env GO111MODULE

      - name: Install dependencies (Ubuntu)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libssl-dev
          sudo apt-get install -y libgl1-mesa-dev xorg-dev
          # wkhtmltopdf is optional - pure Go Maroto PDF library is used as alternative
          sudo apt-get install -y wkhtmltopdf || true

      - name: Install dependencies (Windows)
        if: runner.os == 'Windows'
        run: |
          choco install openssl mingw -y
          # wkhtmltopdf is optional - using pure Go Maroto PDF library as alternative
          choco install wkhtmltopdf -y --ignore-package-exit-codes

      - name: Install dependencies (macOS)
        if: runner.os == 'macOS'
        run: |
          brew install openssl
          # Install wkhtmltopdf from official releases (Homebrew discontinued it)
          curl -L https://github.com/wkhtmltopdf/packaging/releases/download/0.12.6.1-3/wkhtmltox-0.12.6.1-3.macos-cocoa.pkg -o wkhtmltox.pkg
          sudo installer -pkg wkhtmltox.pkg -target /
          rm wkhtmltox.pkg

      - name: Build CLI
        env:
          CGO_ENABLED: ${{ runner.os == 'Windows' && '1' || '0' }}
        run: |
          go mod verify
          go mod tidy
          go build -v -ldflags="-s -w" -o ${{ matrix.cli_output }} ./cmd/cli

      - name: Build GUI
        env:
          CGO_ENABLED: ${{ runner.os == 'Windows' && '1' || '0' }}
        run: |
          go build -v -ldflags="-s -w" -o ${{ matrix.gui_output }} ./cmd/gui

      - name: Package Windows build with DLLs
        if: runner.os == 'Windows'
        shell: bash
        run: |
          mkdir -p windows-package
          cp ${{ matrix.cli_output }} windows-package/
          cp ${{ matrix.gui_output }} windows-package/
          cp lib/*.dll windows-package/
          cd windows-package
          7z a ../ravro_dcrpt-windows-amd64.zip *
          cd ..

      - name: Upload artifacts (Windows)
        if: runner.os == 'Windows'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}-binaries
          path: ravro_dcrpt-windows-amd64.zip

      - name: Upload artifacts (Non-Windows)
        if: runner.os != 'Windows'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}-binaries
          path: |
            ${{ matrix.cli_output }}
            ${{ matrix.gui_output }}

  release:
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            **/*ravro_dcrpt*
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

